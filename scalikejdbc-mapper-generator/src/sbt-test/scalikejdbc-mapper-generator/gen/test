> run

> scalikejdbcGenEcho members
-$ exists src/main/scala/app/models/Members.scala
-$ exists src/test/scala/app/models/MembersSpec.scala
> scalikejdbcGenEcho members Member
-$ exists src/main/scala/app/models/Member.scala
-$ exists src/test/scala/app/models/MemberSpec.scala

> scalikejdbcGenForce members
$ exists src/main/scala/app/models/Members.scala
$ exists src/test/scala/app/models/MembersSpec.scala
> scalikejdbcGenForce members Member
$ exists src/main/scala/app/models/Member.scala
$ exists src/test/scala/app/models/MemberSpec.scala

> scalikejdbcGenForce members
$ newer src/main/scala/app/models/Member.scala src/main/scala/app/models/Members.scala
> + compile
> + test:compile

> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(template ="interpolation")}
> scalikejdbcGenEcho members
> scalikejdbcGenForce members
> + test:compile

> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(testTemplate ="specs2unit")}
> scalikejdbcGenEcho members
> scalikejdbcGenForce members
> + test:compile
> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(template ="queryDsl")}
> scalikejdbcGenEcho members
> scalikejdbcGenForce members
> + test:compile

> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(testTemplate ="specs2acceptance")}
> scalikejdbcGenEcho members
> scalikejdbcGenForce members
> + test:compile
> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(template ="interpolation")}
> scalikejdbcGenEcho members
> scalikejdbcGenForce members
> + test:compile

> set (scalikejdbc.mapper.SbtKeys.scalikejdbcGeneratorSettings in Compile) ~= {_.copy(template ="invalid template name")}
-> scalikejdbcGenEcho members
-> scalikejdbcGenForce members
